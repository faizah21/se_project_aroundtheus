!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=t.inputSelector,this._formElement=e,this._submitButtonSelector=t.submitButtonSelector,this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)]}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))})),this.toggleButtonState()}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_checkFormValidity(){return this._inputElements.some((e=>!e.validity.valid))}_showInputError(e,t){this._errorMessageEl=this._formElement.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEl.textContent=t,this._errorMessageEl.classList.add(this._errorClass)}_hideInputError(e,t){this._errorMessageEl=this._formElement.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.textContent="",this._errorMessageEl.classList.remove(this._errorClass)}};class t{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);this.addItem(t)}))}addItem(e){this._container.prepend(e)}}class s{constructor(e){this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".modal__close")}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close=()=>{this._popup.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)};_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._closeButton.addEventListener("click",this.close),this._popup.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}}class r extends s{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super(t),this._handleFormSubmit=s,this.form=this._popup.querySelector(".modal__form"),this._inputList=this.form.querySelectorAll(".modal__input")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){const t=Object.values(e);for(let e=0;e<t.length;e++)this._inputList[e].value=t[e]}setEventListeners(){super.setEventListeners(),this.form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}setButtonText(e){this.form.querySelector(".modal__button").textContent=e}}class i{constructor(e,t,s,r,i,n){let{_id:o,name:a,link:l,isLiked:c}=e;this.id=o,this._name=a,this._link=l,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=r,this._handleLikeClick=i,this._handleUnlikeClick=n,this.isLiked=c}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this.isLiked?this._handleUnlikeClick(this):this._handleLikeClick(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick()}))}addLike=()=>{this.isLiked=!0,this._likeButton.classList.add("card__like-button_active")};removeLike=()=>{this.isLiked=!1,this._likeButton.classList.remove("card__like-button_active")};_setLikeButtonState(){this.isLiked?this.addLike():this.removeLike()}deleteCard=()=>{this._cardElement.remove(),this._cardElement=null};generateCard(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._setLikeButtonState(),this._setEventListeners(),this._cardElement}}const n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=document.querySelector("#profile-edit-button"),a=document.querySelector("#profile-edit-modal"),l=document.querySelector(".profile__title__input"),c=document.querySelector(".profile__description__input"),d=a.querySelector(".modal__form"),h=document.querySelector(".profile_image_edit_button"),u=document.querySelector(".profile__add-button"),_=document.querySelector("#add-card-form"),m=(_.querySelector(".modal__input_type_title"),document.querySelector("#delete-button"),_.querySelector(".modal__input_type_url"),document.querySelector("#change-picture-form")),p=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error :${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>this._checkResponse(e)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>this._checkResponse(e)))}updateUserInfo(e){let{name:t,job:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then((e=>this._checkResponse(e)))}addNewCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then((e=>this._checkResponse(e)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}updateCardLike(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((e=>this._checkResponse(e)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"a3bf07df-abe1-4d92-b90d-a2e03911adc5","Content-Type":"application/json"}});function E(e){const{name:t,link:s}=e;return new i(e,"#card-template",(()=>{return e=t,r=s,void S.open({name:e,link:r});var e,r}),g,C,B).generateCard()}const S=new class extends s{constructor(e){super(e),this._image=this._popup.querySelector(".modal__image"),this._title=this._popup.querySelector(".modal__description")}open(e){this._image.src=e.link,this._image.alt=e.name,this._title.textContent=e.name,super.open()}}("#image-modal");S.setEventListeners();const v=new r({popupSelector:"#profile-edit-modal",handleFormSubmit:function(e){v.setButtonText("Saving..."),p.updateUserInfo(e).then((e=>{L.setUserInfo(e.name,e.about),v.close()})).catch((t=>{console.error(t),console.log(e)})).finally((()=>{v.setButtonText("Save")}))}});v.setEventListeners();const f=new e(d,n),b=new e(_,n);b.enableValidation();const k=new r({popupSelector:"#add-card-modal",handleFormSubmit:function(e){console.log("Submitting add card form...");const t={name:e.title,link:e.url};p.addNewCard(t).then((e=>{const t=E(e);q.addItem(t),k.close(),k.form.reset(),b.toggleButtonState()})).catch((e=>{console.error("Error adding new card:",e)})).finally((()=>{k.setButtonText("Save")}))}});k.setEventListeners(),u.addEventListener("click",(()=>{k.open()}));const L=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:r}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s),this._avatarElement=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e,t){this._nameElement.textContent=e,this._jobElement.textContent=t}setAvatar(e){this._avatarElement.src=e}}({nameSelector:".profile__title",jobSelector:".profile__description",avatarSelector:".profile__image"});o.addEventListener("click",(()=>{const{name:e,job:t}=L.getUserInfo(),s=L.getUserInfo();l.value=e,c.value=t,f.enableValidation(),v.setInputValues(s),v.open()}));const y=new class extends s{constructor(e,t){super(e),this._form=this._popup.querySelector(".modal__form"),this._handleFormSubmit=t,this.setEventListeners()}setSubmitHandler(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}setButtonText(e){this._form.querySelector(".modal__button").textContent=e}}("#delete-card-modal");function g(e){y.open(),y.setSubmitHandler((function(){y.setButtonText("Deleting"),p.deleteCard(e.id).then((()=>{y.close(),e.deleteCard()})).catch((e=>{console.error(e)})).finally((()=>{y.setButtonText("Delete")}))}))}function C(e){p.updateCardLike(e.id,e.isLiked).then((()=>{e.addLike()})).catch((e=>{console.error(e)}))}function B(e){p.updateCardLike(e.id,e.isLiked).then((()=>{e.removeLike()})).catch((e=>{console.error(e)}))}let q;p.getUserInfo().then((e=>{L.setUserInfo(e.name,e.about),L.setAvatar(e.avatar)})).catch((e=>{console.error(e)})),p.getInitialCards().then((e=>{q=new t({items:e,renderer:E},".cards__list"),q.renderItems()})).catch((e=>{console.log(e)}));const I=new r({popupSelector:"#change-picture-modal",handleFormSubmit:function(e){I.setButtonText("Saving..."),p.updateAvatar(e).then((e=>{L.setAvatar(e.avatar),I.close()})).catch((e=>{console.log(e)})).finally((()=>{I.setButtonText("Save")}))}});I.setEventListeners(),new e(m,n).enableValidation(),h.addEventListener("click",(()=>{I.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,